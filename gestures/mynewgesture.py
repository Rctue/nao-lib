# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([0.96, 4.44])
keys.append([[-0.15651, [3, -0.333333, 0], [3, 1.16, 0]], [-0.15651, [3, -1.16, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([0.96, 4.44])
keys.append([[0.0168321, [3, -0.333333, 0], [3, 1.16, 0]], [0.0168321, [3, -1.16, 0], [3, 0, 0]]])

names.append("LAnklePitch")
times.append([0.96, 4.44])
keys.append([[0.0950661, [3, -0.333333, 0], [3, 1.16, 0]], [0.095066, [3, -1.16, 0], [3, 0, 0]]])

names.append("LAnkleRoll")
times.append([0.96, 4.44])
keys.append([[-0.125746, [3, -0.333333, 0], [3, 1.16, 0]], [-0.125746, [3, -1.16, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([0.96, 1.8, 2.36, 3.52, 4.44])
keys.append([[-0.420274, [3, -0.333333, 0], [3, 0.28, 0]], [-0.816046, [3, -0.28, 0.143582], [3, 0.186667, -0.0957216]], [-1.13819, [3, -0.186667, 0], [3, 0.386667, 0]], [-0.360448, [3, -0.386667, 0], [3, 0.306667, 0]], [-0.420274, [3, -0.306667, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([0.96, 1.8, 2.36, 3.52, 4.44])
keys.append([[-1.17815, [3, -0.333333, 0], [3, 0.28, 0]], [-1.0631, [3, -0.28, -0.08437], [3, 0.186667, 0.0562467]], [-0.756304, [3, -0.186667, 0], [3, 0.386667, 0]], [-1.16742, [3, -0.386667, 0.0135402], [3, 0.306667, -0.0107388]], [-1.17815, [3, -0.306667, 0], [3, 0, 0]]])

names.append("LHand")
times.append([0.96, 1.8, 2.36, 3.52, 4.44])
keys.append([[0.2876, [3, -0.333333, 0], [3, 0.28, 0]], [0.2876, [3, -0.28, 0], [3, 0.186667, 0]], [0.2876, [3, -0.186667, 0], [3, 0.386667, 0]], [0.2876, [3, -0.386667, 0], [3, 0.306667, 0]], [0.2876, [3, -0.306667, 0], [3, 0, 0]]])

names.append("LHipPitch")
times.append([0.96, 4.44])
keys.append([[0.128898, [3, -0.333333, 0], [3, 1.16, 0]], [0.128898, [3, -1.16, 0], [3, 0, 0]]])

names.append("LHipRoll")
times.append([0.96, 4.44])
keys.append([[0.0997519, [3, -0.333333, 0], [3, 1.16, 0]], [0.099752, [3, -1.16, 0], [3, 0, 0]]])

names.append("LHipYawPitch")
times.append([0.96, 4.44])
keys.append([[-0.170232, [3, -0.333333, 0], [3, 1.16, 0]], [-0.170232, [3, -1.16, 0], [3, 0, 0]]])

names.append("LKneePitch")
times.append([0.96, 4.44])
keys.append([[-0.0844119, [3, -0.333333, 0], [3, 1.16, 0]], [-0.0844118, [3, -1.16, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([0.96, 1.8, 2.36, 3.52, 4.44])
keys.append([[1.45572, [3, -0.333333, 0], [3, 0.28, 0]], [0.803774, [3, -0.28, 0.0276121], [3, 0.186667, -0.018408]], [0.785366, [3, -0.186667, 0], [3, 0.386667, 0]], [1.41584, [3, -0.386667, -0.0502897], [3, 0.306667, 0.039885]], [1.45572, [3, -0.306667, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([0.96, 1.8, 2.56, 3.52, 4.44])
keys.append([[0.164096, [3, -0.333333, 0], [3, 0.28, 0]], [0.110406, [3, -0.28, 0.0536902], [3, 0.253333, -0.0485768]], [-0.32131, [3, -0.253333, 0], [3, 0.32, 0]], [-0.0567999, [3, -0.32, -0.0826223], [3, 0.306667, 0.0791797]], [0.164096, [3, -0.306667, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([0.96, 1.8, 2.36, 3.52, 4.44])
keys.append([[0.113474, [3, -0.333333, 0], [3, 0.28, 0]], [0.80224, [3, -0.28, -0.110448], [3, 0.186667, 0.073632]], [0.875872, [3, -0.186667, 0], [3, 0.386667, 0]], [0.770026, [3, -0.386667, 0.105846], [3, 0.306667, -0.0839469]], [0.113474, [3, -0.306667, 0], [3, 0, 0]]])

names.append("RAnklePitch")
times.append([0.96, 4.44])
keys.append([[0.096684, [3, -0.333333, 0], [3, 1.16, 0]], [0.0966839, [3, -1.16, 0], [3, 0, 0]]])

names.append("RAnkleRoll")
times.append([0.96, 4.44])
keys.append([[0.130432, [3, -0.333333, 0], [3, 1.16, 0]], [0.130432, [3, -1.16, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0.96, 1.8, 2.36, 3.52, 4.44])
keys.append([[0.39428, [3, -0.333333, 0], [3, 0.28, 0]], [0.434164, [3, -0.28, 0], [3, 0.186667, 0]], [0.434164, [3, -0.186667, 0], [3, 0.386667, 0]], [0.388144, [3, -0.386667, 0], [3, 0.306667, 0]], [0.39428, [3, -0.306667, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([0.96, 1.8, 2.36, 3.52, 4.44])
keys.append([[1.1704, [3, -0.333333, 0], [3, 0.28, 0]], [0.797638, [3, -0.28, 0.135299], [3, 0.186667, -0.0901992]], [0.493906, [3, -0.186667, 0], [3, 0.386667, 0]], [0.573674, [3, -0.386667, -0.079768], [3, 0.306667, 0.0632642]], [1.1704, [3, -0.306667, 0], [3, 0, 0]]])

names.append("RHand")
times.append([0.96, 1.8, 2.36, 3.52, 4.44])
keys.append([[0.288, [3, -0.333333, 0], [3, 0.28, 0]], [0.288, [3, -0.28, 0], [3, 0.186667, 0]], [0.288, [3, -0.186667, 0], [3, 0.386667, 0]], [0.288, [3, -0.386667, 0], [3, 0.306667, 0]], [0.288, [3, -0.306667, 0], [3, 0, 0]]])

names.append("RHipPitch")
times.append([0.96, 4.44])
keys.append([[0.13495, [3, -0.333333, 0], [3, 1.16, 0]], [0.13495, [3, -1.16, 0], [3, 0, 0]]])

names.append("RHipRoll")
times.append([0.96, 4.44])
keys.append([[-0.0950661, [3, -0.333333, 0], [3, 1.16, 0]], [-0.095066, [3, -1.16, 0], [3, 0, 0]]])

names.append("RHipYawPitch")
times.append([0.96, 4.44])
keys.append([[-0.170232, [3, -0.333333, 0], [3, 1.16, 0]], [-0.170232, [3, -1.16, 0], [3, 0, 0]]])

names.append("RKneePitch")
times.append([0.96, 4.44])
keys.append([[-0.0923279, [3, -0.333333, 0], [3, 1.16, 0]], [-0.0923279, [3, -1.16, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([0.96, 1.8, 2.36, 3.52, 4.44])
keys.append([[1.48189, [3, -0.333333, 0], [3, 0.28, 0]], [0.63972, [3, -0.28, 0], [3, 0.186667, 0]], [0.63972, [3, -0.186667, 0], [3, 0.386667, 0]], [1.18889, [3, -0.386667, -0.156556], [3, 0.306667, 0.124165]], [1.48189, [3, -0.306667, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([0.96, 1.8, 2.36, 3.52, 4.44])
keys.append([[-0.159578, [3, -0.333333, 0], [3, 0.28, 0]], [0.14262, [3, -0.28, -0.0253108], [3, 0.186667, 0.0168738]], [0.159494, [3, -0.186667, 0], [3, 0.386667, 0]], [0.029104, [3, -0.386667, 0.0593146], [3, 0.306667, -0.0470426]], [-0.159578, [3, -0.306667, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([0.96, 1.8, 2.36, 3.52, 4.44])
keys.append([[0.082794, [3, -0.333333, 0], [3, 0.28, 0]], [-0.702614, [3, -0.28, 0.174876], [3, 0.186667, -0.116584]], [-0.819198, [3, -0.186667, 0], [3, 0.386667, 0]], [-0.819198, [3, -0.386667, 0], [3, 0.306667, 0]], [0.0827939, [3, -0.306667, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err
