# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("LElbowRoll")
times.append([ 0.40000, 1.40000, 2.00000, 2.40000, 2.60000, 3.00000, 3.20000, 4.40000])
keys.append([ [ -0.42334, [ 3, -0.13333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.74088, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.74088, [ 3, -0.20000, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.74088, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ -0.74088, [ 3, -0.06667, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.74088, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ -0.74088, [ 3, -0.06667, 0.00000], [ 3, 0.40000, 0.00000]], [ -0.42334, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("LElbowYaw")
times.append([ 0.40000, 1.40000, 2.00000, 2.40000, 2.60000, 3.00000, 3.20000, 4.40000])
keys.append([ [ -1.19810, [ 3, -0.13333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.04751, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.04598, [ 3, -0.20000, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.04598, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ 0.04598, [ 3, -0.06667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.04598, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ 0.04598, [ 3, -0.06667, 0.00000], [ 3, 0.40000, 0.00000]], [ -1.19810, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("LHand")
times.append([ 0.40000, 1.40000, 2.00000, 2.40000, 2.60000, 3.00000, 3.20000, 4.40000])
keys.append([ [ 0.00517, [ 3, -0.13333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00517, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.00517, [ 3, -0.20000, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.00517, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ 0.00517, [ 3, -0.06667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.00517, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ 0.00517, [ 3, -0.06667, 0.00000], [ 3, 0.40000, 0.00000]], [ 0.00517, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("LShoulderPitch")
times.append([ 0.40000, 1.40000, 2.00000, 2.40000, 2.60000, 3.00000, 3.20000, 4.40000])
keys.append([ [ 1.50021, [ 3, -0.13333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.13495, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.13648, [ 3, -0.20000, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.13648, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ 0.13648, [ 3, -0.06667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.13648, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ 0.13648, [ 3, -0.06667, 0.00000], [ 3, 0.40000, 0.00000]], [ 1.50021, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("LShoulderRoll")
times.append([ 0.40000, 1.40000, 2.00000, 2.40000, 2.60000, 3.00000, 3.20000, 4.40000])
keys.append([ [ 0.11808, [ 3, -0.13333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.10589, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.10589, [ 3, -0.20000, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.10589, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ -0.10589, [ 3, -0.06667, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.10589, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ -0.10589, [ 3, -0.06667, 0.00000], [ 3, 0.40000, 0.00000]], [ 0.11808, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("LWristYaw")
times.append([ 0.40000, 1.40000, 2.00000, 2.40000, 2.60000, 3.00000, 3.20000, 4.40000])
keys.append([ [ 0.10580, [ 3, -0.13333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.73781, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.73628, [ 3, -0.20000, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.73781, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ 0.73628, [ 3, -0.06667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.73781, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ 0.73628, [ 3, -0.06667, 0.00153], [ 3, 0.40000, -0.00920]], [ 0.10580, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("RElbowRoll")
times.append([ 0.40000, 0.48000, 2.00000, 2.40000, 2.60000, 3.00000, 3.20000, 4.40000])
keys.append([ [ 0.40655, [ 3, -0.13333, 0.00000], [ 3, 0.02667, 0.00000]], [ 0.40502, [ 3, -0.02667, 0.00000], [ 3, 0.50667, 0.00000]], [ 1.51870, [ 3, -0.50667, -0.02332], [ 3, 0.13333, 0.00614]], [ 1.52484, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ 1.51870, [ 3, -0.06667, 0.00000], [ 3, 0.13333, 0.00000]], [ 1.52484, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ 1.51870, [ 3, -0.06667, 0.00614], [ 3, 0.40000, -0.03682]], [ 0.40655, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("RElbowYaw")
times.append([ 0.40000, 0.48000, 2.00000, 2.40000, 2.60000, 3.00000, 3.20000, 4.40000])
keys.append([ [ 1.16426, [ 3, -0.13333, 0.00000], [ 3, 0.02667, 0.00000]], [ 1.16426, [ 3, -0.02667, 0.00000], [ 3, 0.50667, 0.00000]], [ 0.35585, [ 3, -0.50667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.58134, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ 0.35585, [ 3, -0.06667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.58134, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ 0.35585, [ 3, -0.06667, 0.00000], [ 3, 0.40000, 0.00000]], [ 1.16426, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("RHand")
times.append([ 0.40000, 1.40000, 2.00000, 2.40000, 2.60000, 3.00000, 3.20000, 4.40000])
keys.append([ [ 0.00526, [ 3, -0.13333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00526, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.00526, [ 3, -0.20000, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.00526, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ 0.00526, [ 3, -0.06667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.00526, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ 0.00526, [ 3, -0.06667, 0.00000], [ 3, 0.40000, 0.00000]], [ 0.00526, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("RShoulderPitch")
times.append([ 0.40000, 0.48000, 2.00000, 2.40000, 2.60000, 3.00000, 3.20000, 4.40000])
keys.append([ [ 1.48189, [ 3, -0.13333, 0.00000], [ 3, 0.02667, 0.00000]], [ 1.48802, [ 3, -0.02667, 0.00000], [ 3, 0.50667, 0.00000]], [ 0.11509, [ 3, -0.50667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.12890, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ 0.11509, [ 3, -0.06667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.12890, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ 0.11509, [ 3, -0.06667, 0.00000], [ 3, 0.40000, 0.00000]], [ 1.48189, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("RShoulderRoll")
times.append([ 0.40000, 1.40000, 2.00000, 2.40000, 2.60000, 3.00000, 3.20000, 4.40000])
keys.append([ [ -0.08441, [ 3, -0.13333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.26080, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.25241, [ 3, -0.20000, -0.00839], [ 3, 0.13333, 0.00560]], [ -0.09975, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ -0.10129, [ 3, -0.06667, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.09975, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ -0.10129, [ 3, -0.06667, 0.00000], [ 3, 0.40000, 0.00000]], [ -0.08441, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("RWristYaw")
times.append([ 0.40000, 0.48000, 2.00000, 2.40000, 2.60000, 3.00000, 3.20000, 4.40000])
keys.append([ [ 0.05672, [ 3, -0.13333, 0.00000], [ 3, 0.02667, 0.00000]], [ 0.04727, [ 3, -0.02667, 0.00945], [ 3, 0.50667, -0.17946]], [ -0.52774, [ 3, -0.50667, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.52774, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ -0.52774, [ 3, -0.06667, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.52774, [ 3, -0.13333, 0.00000], [ 3, 0.06667, 0.00000]], [ -0.52774, [ 3, -0.06667, 0.00000], [ 3, 0.40000, 0.00000]], [ 0.05672, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys);
except BaseException, err:
  print err
