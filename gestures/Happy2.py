# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([ 0.80000, 1.20000, 1.46667, 2.26667, 2.73333, 3.00000, 3.66667])
keys.append([ [ -0.18719, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.35746, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ -0.35746, [ 3, -0.08889, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.35891, [ 3, -0.26667, 0.00000], [ 3, 0.15556, 0.00000]], [ -0.35746, [ 3, -0.15556, 0.00000], [ 3, 0.08889, 0.00000]], [ 0.35891, [ 3, -0.08889, 0.00000], [ 3, 0.22222, 0.00000]], [ -0.18719, [ 3, -0.22222, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("HeadYaw")
times.append([ 0.80000, 1.20000, 1.46667, 2.26667, 2.73333, 3.00000, 3.66667])
keys.append([ [ 0.00464, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.05058, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ -0.05058, [ 3, -0.08889, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.02757, [ 3, -0.26667, -0.02130], [ 3, 0.15556, 0.01242]], [ 0.05058, [ 3, -0.15556, 0.00000], [ 3, 0.08889, 0.00000]], [ -0.02757, [ 3, -0.08889, 0.00000], [ 3, 0.22222, 0.00000]], [ 0.00464, [ 3, -0.22222, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("LAnklePitch")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ 0.06447, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.23926, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ -0.23926, [ 3, -0.08889, 0.00000], [ 3, 0.42222, 0.00000]], [ 0.09046, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ 0.06294, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("LAnkleRoll")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ -0.06447, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.03524, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ 0.03524, [ 3, -0.08889, 0.00000], [ 3, 0.42222, 0.00000]], [ -0.20245, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ -0.06600, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("LElbowRoll")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ -0.44183, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ -1.17815, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ -1.06814, [ 3, -0.08889, -0.04645], [ 3, 0.42222, 0.22062]], [ -0.37694, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ -0.43900, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("LElbowYaw")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ -1.18727, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ -1.81774, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ -1.81774, [ 3, -0.08889, 0.00000], [ 3, 0.42222, 0.00000]], [ -1.32626, [ 3, -0.42222, -0.12111], [ 3, 0.31111, 0.08924]], [ -1.18668, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("LHand")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ 0.00708, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.00706, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ 0.00706, [ 3, -0.08889, 0.00000], [ 3, 0.42222, 0.00000]], [ 0.00428, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ 0.00710, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("LHipPitch")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ 0.19017, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.11816, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ -0.11816, [ 3, -0.08889, 0.00000], [ 3, 0.42222, 0.00000]], [ 0.20406, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ 0.18864, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("LHipRoll")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ 0.06745, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.02297, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ 0.02297, [ 3, -0.08889, 0.00000], [ 3, 0.42222, 0.00000]], [ 0.15804, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ 0.06745, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("LHipYawPitch")
times.append([ 1.46667, 2.73333])
keys.append([ [ -0.15489, [ 3, -0.48889, 0.00000], [ 3, 0.42222, 0.00000]], [ -0.15489, [ 3, -0.42222, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("LKneePitch")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ -0.07206, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.54768, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ 0.54768, [ 3, -0.08889, 0.00000], [ 3, 0.42222, 0.00000]], [ -0.09208, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ -0.07359, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("LShoulderPitch")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ 1.51913, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ 1.47115, [ 3, -0.13333, 0.04798], [ 3, 0.08889, -0.03199]], [ 0.07156, [ 3, -0.08889, 0.00000], [ 3, 0.42222, 0.00000]], [ 1.55686, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ 1.47386, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("LShoulderRoll")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ 0.12276, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.10435, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ 0.44157, [ 3, -0.08889, 0.00000], [ 3, 0.42222, 0.00000]], [ 0.15532, [ 3, -0.42222, 0.04674], [ 3, 0.31111, -0.03444]], [ 0.12088, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("LWristYaw")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ -0.14262, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.17790, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ -0.17790, [ 3, -0.08889, 0.00000], [ 3, 0.42222, 0.00000]], [ 0.07512, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ -0.17330, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("RAnklePitch")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ 0.06899, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.09046, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ 0.09046, [ 3, -0.08889, 0.00000], [ 3, 0.42222, 0.00000]], [ -0.23926, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ 0.07052, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("RAnkleRoll")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ 0.10734, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.20245, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ 0.20245, [ 3, -0.08889, 0.00000], [ 3, 0.42222, 0.00000]], [ -0.03524, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ 0.10734, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("RElbowRoll")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ 0.59362, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.37579, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ 0.37694, [ 3, -0.08889, -0.00115], [ 3, 0.42222, 0.00548]], [ 1.27933, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ 0.59060, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("RElbowYaw")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ 1.23491, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ 1.32542, [ 3, -0.13333, -0.00126], [ 3, 0.08889, 0.00084]], [ 1.32626, [ 3, -0.08889, -0.00084], [ 3, 0.42222, 0.00400]], [ 1.81774, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ 1.23365, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("RHand")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ 0.00416, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.00428, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ 0.00428, [ 3, -0.08889, 0.00000], [ 3, 0.42222, 0.00000]], [ 0.00706, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ 0.00405, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("RHipPitch")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ 0.20406, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.20406, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ 0.20406, [ 3, -0.08889, 0.00000], [ 3, 0.42222, 0.00000]], [ -0.11816, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ 0.20406, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("RHipRoll")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ -0.11202, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.15804, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ -0.15804, [ 3, -0.08889, 0.00000], [ 3, 0.42222, 0.00000]], [ -0.02297, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ -0.11202, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("RHipYawPitch")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ -0.16103, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.15489, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ -0.15489, [ 3, -0.08889, 0.00000], [ 3, 0.42222, 0.00000]], [ -0.15489, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ -0.16103, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("RKneePitch")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ -0.09055, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.09208, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ -0.09208, [ 3, -0.08889, 0.00000], [ 3, 0.42222, 0.00000]], [ 0.54768, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ -0.09055, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("RShoulderPitch")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ 1.61066, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ 1.56004, [ 3, -0.13333, 0.00476], [ 3, 0.08889, -0.00317]], [ 1.55686, [ 3, -0.08889, 0.00317], [ 3, 0.42222, -0.01507]], [ -0.38921, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ 1.58100, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("RShoulderRoll")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ -0.13802, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.15182, [ 3, -0.13333, 0.00346], [ 3, 0.08889, -0.00231]], [ -0.15532, [ 3, -0.08889, 0.00349], [ 3, 0.42222, -0.01659]], [ -0.56025, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ -0.17416, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

names.append("RWristYaw")
times.append([ 0.80000, 1.20000, 1.46667, 2.73333, 3.66667])
keys.append([ [ -0.09200, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.07512, [ 3, -0.13333, 0.00000], [ 3, 0.08889, 0.00000]], [ -0.07512, [ 3, -0.08889, 0.00000], [ 3, 0.42222, 0.00000]], [ 0.17790, [ 3, -0.42222, 0.00000], [ 3, 0.31111, 0.00000]], [ -0.10887, [ 3, -0.31111, 0.00000], [ 3, 0.00000, 0.00000]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys);
except BaseException, err:
  print err
